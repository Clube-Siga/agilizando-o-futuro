server {
    listen 80;
    server_name agilizando.clubesiga.com.br;

    # O 'root' aponta para o diretório 'public' DENTRO do container do Nginx.
    # O nosso Dockerfile já copia os ficheiros para lá.
    root /var/www/html;
    index index.php;
    charset utf-8;

    # Define o DNS interno do Docker para que o Nginx possa encontrar outros serviços.
    resolver 127.0.0.11 valid=30s;
    # Cria uma variável para o serviço PHP-FPM, tornando a configuração mais limpa.
    set $php_upstream "agilizando-app:9000";

    # Logs
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    # Regra principal: Tenta encontrar o ficheiro estático. Se não encontrar,
    # envia a requisição para o Laravel (index.php) tratar.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Bloqueia o acesso a ficheiros ocultos.
    location ~ /\.ht {
        deny all;
    }

    # Regra para servir os ficheiros de upload diretamente do volume 'storage'.
    # Isso é muito mais eficiente do que passar pelo PHP.
    location /storage {
        # O 'alias' mapeia a URL /storage para o diretório real.
        # O nosso docker-swarm.yml já monta o volume 'agilizando_storage' neste local.
        alias /var/www/html/storage/app/public;
        try_files $uri =404;
    }

    # Encaminha todas as requisições .php para o serviço da aplicação (PHP-FPM).
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # Usa a variável para que o Nginx resolva o DNS do serviço PHP.
        fastcgi_pass $php_upstream;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_read_timeout 300;
    }
}